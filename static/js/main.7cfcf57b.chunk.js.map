{"version":3,"sources":["logo.svg","shared/draw.js","components/drawpanel.jsx","assets/imgs/icons/Cursor.svg","assets/imgs/icons/T.svg","assets/imgs/icons/Image.svg","assets/imgs/icons/Clear.svg","assets/imgs/icons/jpg.svg","assets/imgs/icons/png.svg","assets/imgs/icons/pdf.svg","assets/imgs/icons/replace.svg","components/toolbar.jsx","views/main.jsx","App.jsx","reportWebVitals.js","store/reducer.js","store/store.js","index.jsx"],"names":["AddText","canvas","color","add","fabric","IText","left","top","fontFamily","fill","fontSize","DrawPanelComponent","props","containerRef","useRef","dispatch","useDispatch","canvasRef","useEffect","Canvas","setBackgroundColor","setWidth","setHeight","Object","prototype","transparentCorners","cornerColor","cornerStyle","type","dispose","className","ref","onClick","e","preventDefault","console","log","activeObject","getActiveObject","setSrc","renderAll","id","ToolbarComponent","useColor","useState","selectedTool","setSelectedTool","photoUpload","file","target","files","objectUrl","URL","createObjectURL","url","buttons","name","icon","CursorIcon","TextIcon","ImageIcon","ReplaceIcon","ClearIcon","PngIcon","JpgIcon","PdfIcon","map","button","Dropdown","Toggle","variant","style","backgroundColor","border","boxShadow","src","Menu","items","item","Item","value","label","onChange","href","Main","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","setReducer","state","action","isDrawingMode","freeDrawingBrush","PencilBrush","width","Image","fromURL","image","scaleToWidth","crossOrigin","selection","forEachObject","element","remove","discardActiveObject","requestRenderAll","a","document","createElement","uri","toDataURL","format","multiplier","quality","download","click","divImage","pdf","jsPDF","addImage","save","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7cfcf57b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//Draw Rect\r\nimport { fabric } from \"fabric\";\r\n\r\nexport function AddText(canvas, color) { \r\n  canvas.add(new fabric.IText('Type Here', { \r\n      left: 50,\r\n      top: 100,\r\n      fontFamily: 'arial black',\r\n      fill: color,\r\n      fontSize: 50\r\n  }));\r\n}","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AddText } from \"../shared/draw\";\r\n\r\nconst DrawPanelComponent = (props) => {\r\n  const containerRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  \r\n  const canvasRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n\r\n    var canvas = new fabric.Canvas(\"canvas\");    \r\n    // canvas = new fabric.Canvas(canvasRef.current, {\r\n    //   width: 1080,\r\n    //   height: 1080,\r\n    // });\r\n\r\n    canvas.setBackgroundColor(\"#aacc11\");\r\n    \r\n    canvas.setWidth(1080);\r\n    canvas.setHeight(1080);\r\n\r\n    fabric.Object.prototype.transparentCorners = true;\r\n    fabric.Object.prototype.cornerColor = \"blue\";\r\n    fabric.Object.prototype.cornerStyle = \"circle\";\r\n    dispatch({ type: \"INIT\", canvas: canvas });\r\n    return () => {\r\n      canvas.dispose();\r\n    };\r\n  }, []);\r\n\r\n\r\n  const handleReplaceImage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    console.log('The link was clicked.');\r\n    var canvas = new fabric.Canvas(\"canvas\");\r\n    \r\n    const activeObject = canvas.getActiveObject();\r\n    if (activeObject && activeObject.type === 'image') {\r\n      activeObject.setSrc('new-image.jpg', () => {\r\n        canvas.renderAll();\r\n      });\r\n    }\r\n    console.log('The link was clicked.');\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 h-100\" ref={containerRef}>\r\n      <span className=\"border border-primary\">\r\n        <div >\r\n          \r\n          <canvas  ref={canvasRef} onClick={handleReplaceImage}  id=\"canvas\" />\r\n\r\n        </div>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DrawPanelComponent;\r\n","export default __webpack_public_path__ + \"static/media/Cursor.43f02867.svg\";","export default __webpack_public_path__ + \"static/media/T.efb08d89.svg\";","export default __webpack_public_path__ + \"static/media/Image.80ed2f40.svg\";","export default __webpack_public_path__ + \"static/media/Clear.cba48e59.svg\";","export default __webpack_public_path__ + \"static/media/jpg.62a03104.svg\";","export default __webpack_public_path__ + \"static/media/png.829f6097.svg\";","export default __webpack_public_path__ + \"static/media/pdf.18d66a21.svg\";","export default __webpack_public_path__ + \"static/media/replace.b9c0023a.svg\";","import React, { useEffect, useState } from 'react';\r\nimport { ColorPicker, useColor } from \"react-color-palette\";\r\nimport CursorIcon from '../assets/imgs/icons/Cursor.svg';\r\nimport TextIcon from '../assets/imgs/icons/T.svg';\r\nimport ImageIcon from '../assets/imgs/icons/Image.svg';\r\nimport ClearIcon from '../assets/imgs/icons/Clear.svg';\r\nimport JpgIcon from '../assets/imgs/icons/jpg.svg'\r\nimport PngIcon from '../assets/imgs/icons/png.svg'\r\nimport PdfIcon from '../assets/imgs/icons/pdf.svg'\r\nimport ReplaceIcon from '../assets/imgs/icons/replace.svg'\r\nimport { Dropdown, Modal } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction ToolbarComponent() {\r\n    \r\n    const [color, setColor] = useColor(\"hex\", \"#ff0000\");\r\n    const [show, setShow] = useState(false);\r\n    const [selectedTool, setSelectedTool] = useState(\"CURSOR\");\r\n    const dispatch = useDispatch();\r\n\r\n    // const handleClose = () => { setShow(false); color?dispatch({type: 'COLOR', color: color?.hex}): \"\";}\r\n    const handleShow = () => setShow(true);\r\n\r\n    const photoUpload = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n          const objectUrl = URL.createObjectURL(file);\r\n          dispatch({type:\"IMAGE\", url: objectUrl})\r\n        }\r\n    };\r\n\r\n    const buttons = [\r\n        {\r\n            name: \"CURSOR\",\r\n            icon: CursorIcon,\r\n            type: \"button\",\r\n            onClick: () => { dispatch({type: 'CURSOR'}); setSelectedTool('CURSOR') }\r\n        },\r\n        {\r\n            name: \"TEXT\",\r\n            icon: TextIcon,\r\n            type: \"button\",\r\n            onClick: () => { dispatch({type: 'TEXT', color: '#001122'}); setSelectedTool('TEXT') }\r\n        },\r\n        {\r\n            name: \"IMAGE\",\r\n            icon: ImageIcon,\r\n            type: \"button\",\r\n            onClick: () => { setSelectedTool('IMAGE') }\r\n        },  \r\n        {\r\n            name: \"REMOVEIMAGE\",\r\n            icon: ReplaceIcon,\r\n            type: \"button\",\r\n            onClick: () => { setSelectedTool('IMAGE'); dispatch({type: 'CLEAR'}) }\r\n        },  \r\n        {\r\n            name: \"CLEAR\",\r\n            icon: ClearIcon,\r\n            type: \"button\",\r\n            onClick: () => { dispatch({type: 'CLEAR'}); setSelectedTool('CLEAR') }\r\n        },\r\n        {\r\n            name: \"DOWNLOAD\",\r\n            icon: PngIcon,\r\n            type: \"button\",\r\n            onClick: () => { dispatch({type: 'DOWNLOAD'}); }\r\n        },\r\n        {\r\n            name: \"DOWNLOADJPG\",\r\n            icon: JpgIcon,\r\n            type: \"button\",\r\n            onClick: () => { dispatch({type: 'DOWNLOADJPG'}); }\r\n        }, \r\n        {\r\n            name: \"DOWNLOADPDF\",\r\n            icon: PdfIcon,\r\n            type: \"button\",\r\n            onClick: () => { dispatch({type: 'DOWNLOADPDF'}); }\r\n        },  \r\n    ]\r\n    \r\n\r\n    const downloadPDF = (e) => {\r\n        { dispatch({type: 'DOWNLOADPDF'}); }\r\n    }\r\n\r\n    return (\r\n        <div className=\"toolbar shadow px-2 py-4 rounded\">\r\n            {\r\n                buttons.map( button => (\r\n                    <div className=\"text-center py-2\" key={button.name}>\r\n                        {\r\n                            (button.type === \"dropdown\") ? <Dropdown>\r\n                                <Dropdown.Toggle \r\n                                    variant=\"success\" \r\n                                    id=\"dropdown-basic\" \r\n                                    style={{backgroundColor:'transparent', border: \"none\", boxShadow: (selectedTool===button.name)?\"inset 0px 3px 6px #00000029\": \"\"}}\r\n                                >\r\n                                    <img src={button.icon} className=\"icon\"/>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {\r\n                                        button.items.map(item => (\r\n                                            <Dropdown.Item key={item.label} onClick={() => {button.onClick(item.value)}}>{item.label}</Dropdown.Item>\r\n                                        ))\r\n                                    }\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>: <label>    \r\n                                <div className=\"toolbar-button cursor-pointer p-2\" onClick={button.onClick} style={{boxShadow: (selectedTool===button.name)?\"inset 0px 3px 6px #00000029\": \"\"}}>\r\n                                    <img src={button.icon} className=\"icon\"/>\r\n                                </div>\r\n                                {button.name === \"IMAGE\" && <input type=\"file\" className=\"d-none\" onChange={photoUpload}/>}\r\n                                {button.name === \"REMOVEIMAGE\" && <input type=\"file\" className=\"d-none\" onChange={photoUpload}/>}\r\n                            </label>\r\n\r\n                        }\r\n                    </div>\r\n                ) )\r\n            }\r\n\r\n            <div className=\"d-flex justify-content-center\">\r\n                <a href=\"#\" onClick={downloadPDF}  >\r\n                    PDF\r\n                </a>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolbarComponent;\r\n","import React from 'react'\r\nimport DrawPanelComponent from '../components/drawpanel'\r\nimport ToolbarComponent from '../components/toolbar'\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <p className=\"font-weight-bold text-red font-size-xl pt-5\">#NFT DOGE</p>\r\n            <div className=\"py-2 panel-height row\">              \r\n                {/* <div > */}\r\n                <div className=\"col-xl-1 col-lg-2 col-md-2 col-sm-3 mb-5\">\r\n                    <ToolbarComponent/>\r\n                </div>\r\n                {/* <div className=\"border col-xl-11 col-xl-10 col-md-10 col-sm-9 rounded px-0 h-100\"> */}\r\n                <div className=\"border col-xl-11 col-xl-10 col-md-10 col-sm-9 rounded\">\r\n                    <DrawPanelComponent/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport Main from './views/main';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Main/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { fabric } from \"fabric\";\r\nimport { combineReducers } from \"redux\";\r\nimport {  AddText } from \"../shared/draw\";\r\nimport jsPDF from \"jspdf\";\r\n\r\n\r\nfunction setReducer(state = { canvas: null, color:\"#ff0000\" }, action) {\r\n    switch (action.type) {\r\n        case \"INIT\": {\r\n            return { ...state, canvas: action.canvas };\r\n        }\r\n        case \"CURSOR\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            state.canvas.isDrawingMode = false;\r\n            return { ...state };\r\n        }\r\n        \r\n        case \"TEXT\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            state.canvas.isDrawingMode = false; \r\n            AddText(state.canvas, action.color);\r\n            return { ...state };\r\n        }\r\n        case \"BRUSH\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            state.canvas.freeDrawingBrush = new fabric.PencilBrush(state.canvas);\r\n            state.canvas.freeDrawingBrush.width = 35;\r\n            state.canvas.freeDrawingBrush.color = action.color;\r\n            state.canvas.isDrawingMode = true;\r\n            return { ...state };\r\n        }\r\n        case \"IMAGE\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            state.canvas.isDrawingMode = false;\r\n            console.log(action.url);\r\n            fabric.Image.fromURL(action.url, function(image) {\r\n                image.scaleToWidth(480);\r\n                state.canvas.add(image);\r\n            }, { crossOrigin: 'anonymous' });\r\n            return { ...state };\r\n        }\r\n        case \"REMOVEIMAGE\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            state.canvas.isDrawingMode = false;\r\n            var selection = state.canvas.getActiveObject();\r\n            if (selection?.type === 'activeSelection') {\r\n                selection.forEachObject(function(element) {\r\n                    state.canvas.remove(element);\r\n                });\r\n            }\r\n            else{\r\n                state.canvas.remove(selection);\r\n            }\r\n            state.canvas.discardActiveObject();\r\n            state.canvas.requestRenderAll();\r\n            return { ...state };\r\n        }\r\n        case \"CLEAR\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            state.canvas.isDrawingMode = false;\r\n            var selection = state.canvas.getActiveObject();\r\n            if (selection?.type === 'activeSelection') {\r\n                selection.forEachObject(function(element) {\r\n                    state.canvas.remove(element);\r\n                });\r\n            }\r\n            else{\r\n                state.canvas.remove(selection);\r\n            }\r\n            state.canvas.discardActiveObject();\r\n            state.canvas.requestRenderAll();\r\n            return { ...state };\r\n        }\r\n        case \"DOWNLOAD\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            const a = document.createElement(\"a\");\r\n            const uri = state.canvas.toDataURL({format: 'png', multiplier: 1, quality: 1});\r\n            console.log(uri);\r\n            a.href = uri\r\n            a.download = \"Online_Drawer.png\";\r\n            a.click();\r\n            return { ...state };\r\n        }\r\n        \r\n        case \"DOWNLOADJPG\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            const a = document.createElement(\"a\");\r\n            const uri = state.canvas.toDataURL({format: 'jpg', multiplier: 1.066, quality: 1});\r\n            console.log(uri);\r\n            a.href = uri\r\n            a.download = \"Online_Drawer.jpg\";\r\n            a.click();\r\n            return { ...state };\r\n        }\r\n        \r\n        case \"DOWNLOADPDF\": {\r\n            if(!state.canvas){\r\n                return state;\r\n            }\r\n            \r\n            const a = document.createElement(\"a\");\r\n            const divImage = state.canvas.toDataURL({format: 'png', multiplier: 1, quality: 1});\r\n            // const divImage = canvas.toDataURL(\"image/png\");\r\n            const pdf = new jsPDF();\r\n            pdf.addImage(divImage, 'PNG', 0, 0,210,210, 'MEDIUM');\r\n            \r\n            pdf.save(\"download.pdf\");          \r\n            return { ...state };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const reducers = combineReducers({\r\n    setReducer\r\n})","import { createStore } from 'redux';\r\nimport { reducers } from './reducer';\r\nexport const store = createStore(reducers);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}